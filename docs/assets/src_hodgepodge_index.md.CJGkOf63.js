import{_ as a}from"./chunks/index.vue_vue_type_script_setup_true_lang.BvEomIip.js";import{c as r,a2 as o,G as t,o as s}from"./chunks/framework.C3fu0AGg.js";import"./chunks/theme.yFSBab4I.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"src/hodgepodge/index.md","filePath":"src/hodgepodge/index.md","lastUpdated":1735181512000}'),l={name:"src/hodgepodge/index.md"},m=Object.assign(l,{setup(i){return(c,e)=>(s(),r("div",null,[e[0]||(e[0]=o('<h2 id="css-实现手机底部弧形选项卡" tabindex="-1">css 实现手机底部弧形选项卡 <a class="header-anchor" href="#css-实现手机底部弧形选项卡" aria-label="Permalink to &quot;css 实现手机底部弧形选项卡&quot;">​</a></h2><p><a href="https://codepen.io/Chokcoco/pen/JjroBPo" target="_blank" rel="noreferrer">点击查看</a><img src="https://cloudflare.cdnjson.com/images/2024/12/25/_202412251739275a7d386cb4334209.jpg" alt="图片没了"></p><h2 id="js-引用小知识" tabindex="-1">js 引用小知识 <a class="header-anchor" href="#js-引用小知识" aria-label="Permalink to &quot;js 引用小知识&quot;">​</a></h2><ol><li>如果每次传递给函数的是字面量对象或数组，每一次的地址都不同。</li><li>函数的剩余参数相当于传进来的参数用一个新的数组字面量包裹了一下。每次的剩余参数的地址不同，但里面被包裹的内容地址相同</li><li>数组的 <code>includes</code> 方法如果是基本数据类型比较的是值，数组包对象比较的是引用地址</li></ol><h2 id="为什么-vw-比-rem-好" tabindex="-1">为什么 vw 比 rem 好？ <a class="header-anchor" href="#为什么-vw-比-rem-好" aria-label="Permalink to &quot;为什么 vw 比 rem 好？&quot;">​</a></h2><ol><li><p>rem 适配是 rem 在模拟 vw 的特性， 现在 vw 可以实现了，如果大部分设备都支持 vw，也就不太需要 rem 了</p></li><li><p>是，而且 rem 要管理 js</p></li></ol><h2 id="css-中间省略号" tabindex="-1">css 中间省略号 <a class="header-anchor" href="#css-中间省略号" aria-label="Permalink to &quot;css 中间省略号&quot;">​</a></h2><p><a href="https://codepen.io/xboxyan/pen/VwpPNbm?fileGuid=YcHxPHhHvDtpqvDw" target="_blank" rel="noreferrer">点击查看</a><img src="https://cloudflare.cdnjson.com/images/2024/12/25/_20241225180024.jpg" alt="图片没了"></p><h2 id="贡献者" tabindex="-1">贡献者 ☘️ <a class="header-anchor" href="#贡献者" aria-label="Permalink to &quot;贡献者 :shamrock:&quot;">​</a></h2>',9)),t(a)]))}});export{p as __pageData,m as default};
